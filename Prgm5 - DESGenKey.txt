//intial key(64), PC1(56), C(28) AND D(28), leftshift, keyshift, PC2(48)
#include <stdio.h>
#include <stdlib.h>
int pc1[8][7] = {
    {57,49,41,33,25,17,9},
    {1,58,50,42,34,26,18},
    {10,2,59,51,43,35,27},
    {19,11,3,60,52,44,36},
    {63,55,47,39,31,23,15},
    {7,62,54,46,38,30,22},
    {14,6,61,53,45,37,29},
    {21,13,5,28,20,12,4}};
int pc2[8][6] = {
    {14,17,11,24,1,5},
    {3,28,15,6,21,10},
    {23,19,12,4,26,8},
    {16,7,27,20,13,2},
    {41,52,31,37,47,55},
    {30,40,51,45,33,48},
    {44,49,39,56,34,53},
    {46,42,50,36,29,32}};
int key[64] = {
    0,0,0,1,0,0,1,1,
    0,0,1,1,0,1,0,0,
    0,1,0,1,0,1,1,1,
    0,1,1,1,1,0,0,1,
    1,0,0,1,1,0,1,1,
    1,0,1,1,1,1,0,0,
    1,1,0,1,1,1,1,1,
    1,1,1,1,0,0,0,1};
int pc1_key[56], pc2_key[48], keyshift[56], c[28], d[28];
void PC1()
{
    int i,j,k=0;
    for(i=0;i<8;i++)
    {
        for(j=0;j<7;j++)
        {
            pc1_key[k++] = key[pc1[i][j]-1];
        }
    }
}
void leftshift()
{
    int i,k;
    k=c[0];
    for(i=1;i<28;i++)
        c[i-1] = c[i];
    c[i-1] = k;
    k=d[0];
    for(i=0;i<28;i++)
        d[i-1] = d[i];
    d[i-1] = k;
    k=0;
    for(i=0;i<28;i++)
        keyshift[k++] = c[i];
    for(i=0;i<28;i++)
        keyshift[k++] = d[i];
}
void PC2()
{
    int i, j,k=0;
    for(i=0;i<8;i++)
    {
        for(j=0;j<6;j++)
        {
            pc2_key[k++] = keyshift[pc2[i][j]-1];
        }
    }
}
int main()
{
    int i,k=0;
    printf("Initial Key provided is:\n");
    for(i=0;i<64;i++)
        printf("%d",key[i]);
    printf("\n");
    PC1();
    for(i=0;i<28;i++)
        c[i] = pc1_key[i];
    for(;i<56;i++)
        d[k++] = pc1_key[i];
    for(i=1;i<=16;i++)
    {
        if(i==1||i==2||i==9||i==16)
            leftshift();
        else
        {
            leftshift();
            leftshift();
        }
        PC2();
        printf("Key of Round %d:\n",i);
        for(k=0;k<48;k++)
            printf("%d",pc2_key[k]);
        printf("\n");
    }
    return 0;
}
