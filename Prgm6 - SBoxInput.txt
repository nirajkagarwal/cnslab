#include <stdio.h>
#include <stdlib.h>

int op[64] = {0,0,0,0,0,0,0,1, 0,0,1,0,0,0,1,1, 0,1,0,0,0,1,0,1, 0,1,1,0,0,1,1,1, 1,0,0,0,1,0,0,1, 1,0,1,0,1,0,1,1, 1,1,0,0,1,1,0,1, 1,1,1,0,1,1,1,1};
int key[56] = {0,1,1,1,1,0,0,1,1,0,1,0,1,1,1,0,1,1,0,1,1,0,0,1,1,1,0,1,1,0,1,1,1,1,0,0,1,0,0,1,1,1,1,0,0,1,0,1};
int e_table[8][6] = {
    {32,1,2,3,4,5},
    {4,5,6,7,8,9},
    {8,9,10,11,12,13},
    {12,13,14,15,16,17},
    {16,17,18,19,20,21},
    {20,21,22,23,24,25},
    {24,25,26,27,28,29},
    {28,29,30,31,32,1}
    };
int pc2[8][6]={
    {14,17,11,24,1,5},
    {3,28,15,6,21,10},
    {23,19,12,4,26,8},
    {16,7,27,20,13,2},
    {41,52,31,37,47,55},
    {30,40,51,45,33,48},
    {44,49,39,56,34,53},
    {46,42,50,36,29,32}
    };
int ip[48],c[28],d[28],keyshift[56],pc2_key[48];
int l[32], r[32];
void PC2()
{
    int i,j,k=0;
    for(i=0;i<8;i++)
    {
        for(j=0;j<6;j++)
            pc2_key[k++] = keyshift[pc2[i][j]-1];
    }
}
void leftshift()
{
    int i,k;
    k = c[0];
    for(i=1;i<28;i++)
        c[i-1] = c[i];
    c[i-1] = k;
    k=d[0];
    for(i=1;i<28;i++)
        d[i-1] = d[i];
    d[i-1] = k;
    k=0;
    for(i=0;i<28;i++)
        keyshift[k++] = c[i];
    for(i=0;i<28;i++)
        keyshift[k++] = d[i];
}
void etable()
{
    int i, j,k=0;
    for(i=0;i<8;i++)
    {
        for(j=0;j<6;j++)
            ip[k++] = r[e_table[i][j] - 1];
    }
}
void xor48()
{
    int i;
    for(i=0;i<48;i++)
    {
        if(ip[i]==pc2_key[i])
            ip[i]=0;
        else
            ip[i]=1;
    }
}
int main()
{
    int i,k,n;
    printf("Enter the Round Number for SBox input:\t");
    scanf("%d",&n);
    k=0;
    for(i=0;i<28;i++)
        c[i] = key[k++];
    for(i=0;i<28;i++)
        d[i] = key[k++];
    if(n==1||n==2||n==9||n==16)
        leftshift();
    else
    {
        leftshift();
        leftshift();
    }
    PC2(); //pc2_key[48] is the key to XOR
    k=0;
    for(i=0;i<32;i++)
        l[i] = op[k++];
    for(i=0;i<32;i++)
        r[i] = op[k++];
    //Expand 32 bit r[i] array to 48 using etable
    //ip[] - this will be the input array for sbox
    etable();
    //xor ip[] with key to get input of SBox, the answer is stored in ip[]
    xor48();
    printf("\nThe input for %dth round SBox is:\n",n);
    for(i=0;i<48;i++)
        printf("%d",ip[i]);
    printf("\n");
    return 0;
}
